const { MigrationInterface, QueryRunner } = require("typeorm");

module.exports = class UuidAllTables1689604745669 {
    name = 'UuidAllTables1689604745669'

    async up(queryRunner) {
        await queryRunner.query(`CREATE TABLE "auth"."person_contacts_type" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "description" character varying NOT NULL, CONSTRAINT "PK_f81d0f4b512b16d534243ab94bc" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."person_contacts_type"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."person_contacts_type"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."person_contacts_type"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."person_contacts_type"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."person_contacts_type"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'; COMMENT ON COLUMN "auth"."person_contacts_type"."description" IS 'nome do tipo de contato'`);
        await queryRunner.query(`CREATE TABLE "auth"."users_groups_permissions" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "api_route_application_id" bigint NOT NULL, "action" character varying NOT NULL, "user_group_id" bigint, CONSTRAINT "PK_cf8339b98ce063625755a4511cc" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."users_groups_permissions"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."users_groups_permissions"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."users_groups_permissions"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."users_groups_permissions"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."users_groups_permissions"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'; COMMENT ON COLUMN "auth"."users_groups_permissions"."action" IS 'acao que o grupo de usuario/aplicacao tem na rota. pode ser GET,POST,PUT,DELETE'`);
        await queryRunner.query(`CREATE TABLE "auth"."users_groups" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "name" character varying NOT NULL, CONSTRAINT "PK_4644edf515e3c0b88e988522588" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."users_groups"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."users_groups"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."users_groups"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."users_groups"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."users_groups"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'`);
        await queryRunner.query(`CREATE TABLE "auth"."users_groups_user" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "main" character varying NOT NULL DEFAULT '0', "user_id" bigint, "user_group_id" bigint, CONSTRAINT "PK_3f4a7469c59e1c47a02a4f9ac50" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."users_groups_user"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."users_groups_user"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."users_groups_user"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."users_groups_user"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."users_groups_user"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'`);
        await queryRunner.query(`CREATE TABLE "auth"."users" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "username" character varying NOT NULL, "password" character varying NOT NULL, "verification_code" character varying, "person_id" bigint, CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."users"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."users"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."users"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."users"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."users"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'`);
        await queryRunner.query(`CREATE TABLE "auth"."person" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_5fdaf670315c4b7e70cce85daa3" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."person"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."person"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."person"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."person"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."person"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'`);
        await queryRunner.query(`CREATE TABLE "auth"."person_contacts" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "description" character varying NOT NULL, "main" character(1) NOT NULL, "person_id" bigint, "person_contact_type_id" bigint, CONSTRAINT "PK_07b8ffac6f3ee21ad90b7af50e2" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."person_contacts"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."person_contacts"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."person_contacts"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."person_contacts"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."person_contacts"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'; COMMENT ON COLUMN "auth"."person_contacts"."main" IS 'chave verificadora do contato principal(pode ter somente um por tipo)'`);
        await queryRunner.query(`CREATE TABLE "auth"."applications" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "description" character varying NOT NULL, "public_key" character varying NOT NULL, "private_key" character varying NOT NULL, "third_party_application" character varying NOT NULL, CONSTRAINT "PK_938c0a27255637bde919591888f" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."applications"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."applications"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."applications"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."applications"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."applications"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'; COMMENT ON COLUMN "auth"."applications"."description" IS 'descricao da aplicacao'; COMMENT ON COLUMN "auth"."applications"."public_key" IS 'chave publica que sera disponibilizado para a aplicacao(oauth)'; COMMENT ON COLUMN "auth"."applications"."private_key" IS 'chave privada que sera disponibilizado para a aplicacao(oauth)'; COMMENT ON COLUMN "auth"."applications"."third_party_application" IS 'identifica se a aplicação é uma aplicação de terceiro. 1 - sim 0 - não'`);
        await queryRunner.query(`CREATE TABLE "auth"."api_routes_applications" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "application_id" bigint, "api_route_id" bigint, CONSTRAINT "PK_41894b41825efe59dbab24a7e26" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."api_routes_applications"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."api_routes_applications"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."api_routes_applications"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."api_routes_applications"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."api_routes_applications"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'`);
        await queryRunner.query(`CREATE TABLE "auth"."api_routes" ("id" BIGSERIAL NOT NULL, "uuid" character varying, "status" character NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "route" character varying NOT NULL, CONSTRAINT "PK_9ba16486d4b8d24487a2d43117f" PRIMARY KEY ("id")); COMMENT ON COLUMN "auth"."api_routes"."uuid" IS 'identificador unico do registro'; COMMENT ON COLUMN "auth"."api_routes"."status" IS 'situacao do registro. 1 - ativo, 0 - inativo'; COMMENT ON COLUMN "auth"."api_routes"."created_at" IS 'data de criacao do registro'; COMMENT ON COLUMN "auth"."api_routes"."updated_at" IS 'data de ALTERACAO do registro'; COMMENT ON COLUMN "auth"."api_routes"."deleted_at" IS 'data de EXCLUSAO do registro(soft-delete)'; COMMENT ON COLUMN "auth"."api_routes"."route" IS 'rota da api'`);
        await queryRunner.query(`ALTER TABLE "auth"."users_groups_permissions" ADD CONSTRAINT "FK_7c1b1727dd745bb5acb8c219c27" FOREIGN KEY ("user_group_id") REFERENCES "auth"."users_groups"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."users_groups_user" ADD CONSTRAINT "FK_042c21883803e9c9df082554e52" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."users_groups_user" ADD CONSTRAINT "FK_cadb59bc6c396ac74c743eb2788" FOREIGN KEY ("user_group_id") REFERENCES "auth"."users_groups"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."users" ADD CONSTRAINT "FK_5ed72dcd00d6e5a88c6a6ba3d18" FOREIGN KEY ("person_id") REFERENCES "auth"."person"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."person_contacts" ADD CONSTRAINT "FK_f93c944e8b6efe7d6c247e19e92" FOREIGN KEY ("person_id") REFERENCES "auth"."person"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."person_contacts" ADD CONSTRAINT "FK_3ea472b1e6a35e6efc8a4f665c4" FOREIGN KEY ("person_contact_type_id") REFERENCES "auth"."person_contacts_type"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."api_routes_applications" ADD CONSTRAINT "FK_d1789ba113ab2f1ed9e3f3772b3" FOREIGN KEY ("application_id") REFERENCES "auth"."applications"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "auth"."api_routes_applications" ADD CONSTRAINT "FK_05def5b3fde2080239fd27575bd" FOREIGN KEY ("api_route_id") REFERENCES "auth"."api_routes"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    async down(queryRunner) {
        await queryRunner.query(`ALTER TABLE "auth"."api_routes_applications" DROP CONSTRAINT "FK_05def5b3fde2080239fd27575bd"`);
        await queryRunner.query(`ALTER TABLE "auth"."api_routes_applications" DROP CONSTRAINT "FK_d1789ba113ab2f1ed9e3f3772b3"`);
        await queryRunner.query(`ALTER TABLE "auth"."person_contacts" DROP CONSTRAINT "FK_3ea472b1e6a35e6efc8a4f665c4"`);
        await queryRunner.query(`ALTER TABLE "auth"."person_contacts" DROP CONSTRAINT "FK_f93c944e8b6efe7d6c247e19e92"`);
        await queryRunner.query(`ALTER TABLE "auth"."users" DROP CONSTRAINT "FK_5ed72dcd00d6e5a88c6a6ba3d18"`);
        await queryRunner.query(`ALTER TABLE "auth"."users_groups_user" DROP CONSTRAINT "FK_cadb59bc6c396ac74c743eb2788"`);
        await queryRunner.query(`ALTER TABLE "auth"."users_groups_user" DROP CONSTRAINT "FK_042c21883803e9c9df082554e52"`);
        await queryRunner.query(`ALTER TABLE "auth"."users_groups_permissions" DROP CONSTRAINT "FK_7c1b1727dd745bb5acb8c219c27"`);
        await queryRunner.query(`DROP TABLE "auth"."api_routes"`);
        await queryRunner.query(`DROP TABLE "auth"."api_routes_applications"`);
        await queryRunner.query(`DROP TABLE "auth"."applications"`);
        await queryRunner.query(`DROP TABLE "auth"."person_contacts"`);
        await queryRunner.query(`DROP TABLE "auth"."person"`);
        await queryRunner.query(`DROP TABLE "auth"."users"`);
        await queryRunner.query(`DROP TABLE "auth"."users_groups_user"`);
        await queryRunner.query(`DROP TABLE "auth"."users_groups"`);
        await queryRunner.query(`DROP TABLE "auth"."users_groups_permissions"`);
        await queryRunner.query(`DROP TABLE "auth"."person_contacts_type"`);
    }
}
